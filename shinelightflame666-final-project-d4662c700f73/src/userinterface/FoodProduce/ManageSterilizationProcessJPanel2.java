/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.FoodProduce;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.FoodProduce.ProducerProductOrganization;
import Business.Organization.FoodProduce.ProducerSterelizationOrganization;
import Business.Organization.Organization;
import Business.Poultry.ChickenShed;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author apple
 */
public class ManageSterilizationProcessJPanel2 extends javax.swing.JPanel {

    JPanel userProcessContainer;
    UserAccount account;
    Enterprise enterprise;
    ProducerSterelizationOrganization organization;
    EcoSystem system;

    /**
     * Creates new form ManageSterilizationProcessJPanel2
     */
    public ManageSterilizationProcessJPanel2(JPanel userProcessContainer, UserAccount account, ProducerSterelizationOrganization organization, Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = organization;
        this.enterprise = enterprise;
        this.system = system;
        populateTable();
        populateCombo();
        populateAdvice();
    }

    public void populateAdvice() {
        if (organization.getWorkQueue().getWorkRequestList().size() != 0) {
            int a = organization.getWorkQueue().getWorkRequestList().size();
            WorkRequest req = organization.getWorkQueue().getWorkRequestList().get(a - 1);
            txtAdvice.setText(String.valueOf(req.getMessage()));
        }
    }

    public void populateCombo() {
        comboChicken.removeAllItems();
//        comboPerson.addItem("Blank");

        for (ChickenShed shed : system.getChickenShedDirectory().getChickenShedList()) {

            comboChicken.addItem(shed);
        }
    }

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblSterilization.getModel();
        dtm.setRowCount(0);
        int rowCount = dtm.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            dtm.removeRow(i);
        }

        for (ChickenShed u : system.getChickenShedDirectory().getChickenShedList()) {

            Object[] row = new Object[6];
            row[0] = u;
            row[1] = u.getHumidity();
            row[2] = u.getTemperature();
            row[3] = u.getWeatheroutside();
            row[4] = u.getIsSterelized();
            row[5] = u.getStatus();
            dtm.addRow(row);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        txtHumidity = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTemperature = new javax.swing.JTextField();
        ComboState = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        btnCreate = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSterilization = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtWeather = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        comboChicken = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        txtAdvice = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setText("Manage Sterilization Process");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 46, -1, -1));

        btnBack.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FeedbackAnalytics/Picture/back.png"))); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 46, -1, -1));

        txtHumidity.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtHumidity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHumidityActionPerformed(evt);
            }
        });
        add(txtHumidity, new org.netbeans.lib.awtextra.AbsoluteConstraints(412, 424, 154, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel3.setText("Humidity:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(293, 428, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel4.setText("Temperature:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 491, -1, 35));

        txtTemperature.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        add(txtTemperature, new org.netbeans.lib.awtextra.AbsoluteConstraints(412, 490, 154, -1));

        ComboState.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ComboState.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selected", "Normal", "Abnormal" }));
        add(ComboState, new org.netbeans.lib.awtextra.AbsoluteConstraints(754, 496, 154, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel5.setText("State:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(673, 494, -1, -1));

        btnCreate.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        btnCreate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FeedbackAnalytics/Picture/SubmitGreen.png"))); // NOI18N
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        add(btnCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(959, 479, 176, -1));

        tblSterilization.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblSterilization.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ChickenShedId", "Humidity", "Tempreture", "Weather", "If Steriizated", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblSterilization);
        if (tblSterilization.getColumnModel().getColumnCount() > 0) {
            tblSterilization.getColumnModel().getColumn(0).setResizable(false);
            tblSterilization.getColumnModel().getColumn(1).setResizable(false);
            tblSterilization.getColumnModel().getColumn(2).setResizable(false);
            tblSterilization.getColumnModel().getColumn(3).setResizable(false);
            tblSterilization.getColumnModel().getColumn(4).setResizable(false);
            tblSterilization.getColumnModel().getColumn(5).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(223, 135, 685, 183));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel6.setText("Weather:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(638, 364, -1, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel7.setText("If Sterilizated");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(597, 428, -1, -1));

        txtWeather.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        add(txtWeather, new org.netbeans.lib.awtextra.AbsoluteConstraints(754, 360, 154, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(754, 432, 154, -1));

        jLabel8.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel8.setText("ChickenShedId:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(223, 357, -1, -1));

        add(comboChicken, new org.netbeans.lib.awtextra.AbsoluteConstraints(412, 361, 154, -1));

        jLabel9.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 153));
        jLabel9.setText("Manager Advise:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 564, -1, -1));

        txtAdvice.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        add(txtAdvice, new org.netbeans.lib.awtextra.AbsoluteConstraints(568, 590, -1, 20));
    }// </editor-fold>//GEN-END:initComponents

    private void txtHumidityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHumidityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHumidityActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:

        try {

            Pattern p1 = Pattern.compile("^[0-9]+$");
            Matcher m1 = p1.matcher(txtHumidity.getText());
            Matcher m2 = p1.matcher(txtTemperature.getText());
            Matcher m3 = p1.matcher(txtWeather.getText());
            if (!m1.matches() || !m2.matches() || !m3.matches()) {
                JOptionPane.showMessageDialog(null, "Please enter a valid input", "Error", JOptionPane.ERROR_MESSAGE);
                txtHumidity.setText("");
                txtTemperature.setText("");
                txtWeather.setText("");

            } else {
                ChickenShed s = (ChickenShed) comboChicken.getSelectedItem();
                s.setHumidity(Float.parseFloat(txtHumidity.getText()));
                s.setTemperature(Float.parseFloat(txtTemperature.getText()));
                s.setWeatheroutside(Float.parseFloat(txtWeather.getText()));
                s.setIsSterelized(String.valueOf(jComboBox1.getSelectedItem()));
                s.setStatus(String.valueOf(ComboState.getSelectedItem()));
                populateTable();

                JOptionPane.showMessageDialog(null, "Sterelization Data Successfully Created");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please enter correct data");
        }


    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ComboState;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JComboBox comboChicken;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblSterilization;
    private javax.swing.JLabel txtAdvice;
    private javax.swing.JTextField txtHumidity;
    private javax.swing.JTextField txtTemperature;
    private javax.swing.JTextField txtWeather;
    // End of variables declaration//GEN-END:variables
}
