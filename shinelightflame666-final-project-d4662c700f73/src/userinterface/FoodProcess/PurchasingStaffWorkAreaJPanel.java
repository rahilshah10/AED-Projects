/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.FoodProcess;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FoodProcess.PurchasingWorkRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Business.Organization.FoodProduce.ProducerSalesOrganization;
import Business.Poultry.ChickenShed;
import Business.Poultry.ChickenShedDirectory;
import Business.storageclass.Product;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author apple
 */
public class PurchasingStaffWorkAreaJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    EcoSystem system;
    public static UserAccount purchasingaccount;
    Enterprise enterprise;
    Organization organization;

    /**
     * Creates new form ProcessorPurchasingStaff
     */
    public PurchasingStaffWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem business) {

        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.system = business;
        this.purchasingaccount = account;
        this.organization = organization;
        this.enterprise = enterprise;
        System.out.println(account);
        System.out.println(enterprise);
        populateTable();
        populateAdvice();
    }

    public void populateAdvice() {
        if (organization.getWorkQueue().getWorkRequestList().size() != 0) {
            int a = organization.getWorkQueue().getWorkRequestList().size();
            WorkRequest req = organization.getWorkQueue().getWorkRequestList().get(a - 1);
            lbAdvice.setText(String.valueOf(req.getMessage()));
        }
    }

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblProduct.getModel();
        dtm.setRowCount(0);
        for (WorkRequest request : purchasingaccount.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[5];
            row[0] = ((PurchasingWorkRequest) request);
            row[1] = ((PurchasingWorkRequest) request).getQuantity();
            row[2] = ((PurchasingWorkRequest) request).getProducerName();
            row[3] = ((PurchasingWorkRequest) request).getDate();
            String result = ((PurchasingWorkRequest) request).getStatus();
            row[4] = result == null ? "Waiting" : result;
            dtm.addRow(row);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnMakeOrder = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lbAdvice = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        txtProducerName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        ComboProduct = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(204, 255, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setText("Purchasing Staff Work Area");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(293, 36, -1, -1));

        btnMakeOrder.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        btnMakeOrder.setForeground(new java.awt.Color(255, 0, 51));
        btnMakeOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FeedbackAnalytics/Picture/submit.png"))); // NOI18N
        btnMakeOrder.setText("Order NOW!");
        btnMakeOrder.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnMakeOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMakeOrderActionPerformed(evt);
            }
        });
        add(btnMakeOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(684, 677, -1, -1));

        tblProduct.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Quantity", "Producer Name", "Record Date", "Status"
            }
        ));
        jScrollPane2.setViewportView(tblProduct);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 106, 677, 341));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setText("Producer Name:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 589, -1, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 102));
        jLabel3.setText("Manager Advise:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 771, -1, -1));

        lbAdvice.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        add(lbAdvice, new org.netbeans.lib.awtextra.AbsoluteConstraints(291, 753, -1, -1));

        btnBack.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FeedbackAnalytics/Picture/back.png"))); // NOI18N
        btnBack.setText("Back");
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 106, 172, 63));
        add(txtProducerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(395, 578, 147, 40));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel5.setText("Product Name:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(228, 489, -1, -1));

        txtQuantity.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });
        add(txtQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(747, 486, 144, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel6.setText("Quantity:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(634, 489, -1, -1));

        txtDate.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        add(txtDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(747, 583, 144, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel7.setText("Date:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(672, 586, -1, -1));

        ComboProduct.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        ComboProduct.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Egg" }));
        add(ComboProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(395, 485, 105, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnMakeOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMakeOrderActionPerformed
        try {

            Pattern p1 = Pattern.compile("^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$");
            Pattern p2 = Pattern.compile("^[0-9]+$");
            Matcher m1 = p1.matcher(txtDate.getText());
            Matcher m2 = p2.matcher(txtQuantity.getText());
            if (!m1.matches() || !m2.matches()) {
                JOptionPane.showMessageDialog(null, "Please enter a valid input", "Error", JOptionPane.ERROR_MESSAGE);
                txtDate.setText("");
                txtQuantity.setText("");
            } else {
                String productName = String.valueOf(ComboProduct.getSelectedItem());
                int quantity = Integer.parseInt(txtQuantity.getText());
                String producerName = txtProducerName.getText();
                String date = txtDate.getText();

                WorkRequest request = new PurchasingWorkRequest();
                ((PurchasingWorkRequest) request).setProductName(productName);
                ((PurchasingWorkRequest) request).setQuantity(quantity);
                ((PurchasingWorkRequest) request).setProducerName(producerName);
                ((PurchasingWorkRequest) request).setDate(date);

                Product p = system.getProductdirectory().addProduct();
                p.setProductName(productName);
                p.setQuantity(quantity);
                p.setProducerName(producerName);
                p.setHumidity(0);
                p.setTemperature(0);

                Organization org = null;
                for (Enterprise ent : system.getNetworkList().get(0).getEnterpriseDirectory().getEnterpriseList()) {
                    for (Organization organ : ent.getOrganizationDirectory().getOrganizationList()) {
                        if (organ instanceof ProducerSalesOrganization) {
                            org = organ;
                            break;
                        }
                    }
                    if (org != null) {
                        org.getWorkQueue().getWorkRequestList().add(request);
                        break;
                    }

                }
                if (org != null) {
                    purchasingaccount.getWorkQueue().getWorkRequestList().add(request);
                }
                JOptionPane.showMessageDialog(null, "Purchasing Table Updated!");
            }
            populateTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please enter correct data!");
        }
    }//GEN-LAST:event_btnMakeOrderActionPerformed

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboProduct;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnMakeOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbAdvice;
    private javax.swing.JTable tblProduct;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtProducerName;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
