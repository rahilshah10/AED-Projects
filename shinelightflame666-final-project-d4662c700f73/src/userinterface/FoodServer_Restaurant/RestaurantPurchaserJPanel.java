/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.FoodServer_Restaurant;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.FoodProcess.ProcessorSalesOrganization;
import Business.Organization.FoodProduce.ProducerSalesOrganization;
import Business.Organization.FoodServer.ServerRestaurantPurchaserOrganization;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FoodProcess.PurchasingWorkRequest;
import Business.WorkQueue.FoodServer.RestaurantPurchasingWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author apple
 */
public class RestaurantPurchaserJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    EcoSystem system;
    UserAccount account;
    Enterprise enterprise;
    Organization organization;

    public RestaurantPurchaserJPanel(JPanel userProcessContainer, UserAccount account, ServerRestaurantPurchaserOrganization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.account = account;
        this.enterprise = enterprise;
        this.system = business;
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblProductList.getModel();
        dtm.setRowCount(0);
        for (WorkRequest request : account.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[5];
            row[0] = ((RestaurantPurchasingWorkRequest) request);
            row[1] = ((RestaurantPurchasingWorkRequest) request).getQuantity();
            row[2] = ((RestaurantPurchasingWorkRequest) request).getProcessorName();
            row[3] = ((RestaurantPurchasingWorkRequest) request).getDate();
            String result = ((RestaurantPurchasingWorkRequest) request).getStatus();
            row[4] = result == null ? "Waiting" : result;

            dtm.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProductList = new javax.swing.JTable();
        btnSubmit = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtProcessorName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        ComboProduct = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setText("Restaurant Purchaser");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 33, -1, -1));

        tblProductList.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblProductList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Quantity", "Producer Name", "Record Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblProductList);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 770, 140));

        btnSubmit.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        btnSubmit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FeedbackAnalytics/Picture/SubmitGreen.png"))); // NOI18N
        btnSubmit.setToolTipText("");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 420, 180, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel5.setText("Product Name:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 280, -1, -1));

        txtQuantity.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtQuantity.setText("25");
        add(txtQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 330, 110, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel6.setText("Quantity:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 330, -1, -1));

        txtProcessorName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtProcessorName.setText("MrYellow Ltd");
        add(txtProcessorName, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 280, 150, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setText("Processor Name:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 280, -1, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel7.setText("Date:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 340, -1, -1));

        txtDate.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtDate.setText("11/09/2017");
        add(txtDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 340, 150, -1));

        ComboProduct.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ComboProduct.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Egg" }));
        add(ComboProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 280, 90, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        try {

            Pattern p1 = Pattern.compile("^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$");
            Pattern p2 = Pattern.compile("^[0-9]+$");
            Matcher m1 = p1.matcher(txtDate.getText());
            Matcher m2 = p2.matcher(txtQuantity.getText());
              if (!m1.matches() || !m2.matches()) {
                JOptionPane.showMessageDialog(null, "Please enter a valid input", "Error", JOptionPane.ERROR_MESSAGE);
                txtDate.setText("");
                txtQuantity.setText("");
                } else {
        String productName = String.valueOf(ComboProduct.getSelectedItem());
        int quantity = Integer.parseInt(txtQuantity.getText());
        String processorName = txtProcessorName.getText();
        String date = txtDate.getText();

        WorkRequest request = new RestaurantPurchasingWorkRequest();
        ((RestaurantPurchasingWorkRequest) request).setProductName(productName);
        ((RestaurantPurchasingWorkRequest) request).setQuantity(quantity);
        ((RestaurantPurchasingWorkRequest) request).setProcessorName(processorName);
        ((RestaurantPurchasingWorkRequest) request).setDate(date);

        Organization org = null;

        for (Enterprise ent : system.getNetworkList().get(0).getEnterpriseDirectory().getEnterpriseList()) {
            for (Organization organ : ent.getOrganizationDirectory().getOrganizationList()) {
                if (organ instanceof ProcessorSalesOrganization) {
                    org = organ;
                    break;
                }
            }
        }
        if (org != null) {
            org.getWorkQueue().getWorkRequestList().add(request);
            account.getWorkQueue().getWorkRequestList().add(request);
        }
        populateTable();
         JOptionPane.showMessageDialog(null, "Order added successfully!");
              }
               } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please enter correct data!");
        }
    }//GEN-LAST:event_btnSubmitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboProduct;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblProductList;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtProcessorName;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
