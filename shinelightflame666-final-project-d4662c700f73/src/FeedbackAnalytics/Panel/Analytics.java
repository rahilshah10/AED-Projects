/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FeedbackAnalytics.Panel;

import FeedbackAnalytics.DBOperation.DBOperator;
import FeedbackAnalytics.FeedbackProcessor.MySqlConnect;
import FeedbackAnalytics.FeedbackProcessor.Word;
import FeedbackAnalytics.FeedbackProcessor.WordProcessor;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Zi Wei Fan
 */
public class Analytics extends javax.swing.JPanel {

    Connection conn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    DBOperator dbOperator = new DBOperator();
    DefaultTableModel model;
    WordProcessor wp;
    List<String> stringList;
    JPanel userProcessContainer;

    public Analytics(JPanel userProcessContainer) {
        initComponents();
        conn = MySqlConnect.connectDB();
        this.userProcessContainer = userProcessContainer;
        populateFeedback();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelAnalytics = new javax.swing.JPanel();
        btnCheckAlert = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblFeedback = new javax.swing.JTable();
        btnReport = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblResult = new javax.swing.JTable();
        panelReport = new java.awt.Panel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnResponse = new javax.swing.JButton();

        panelAnalytics.setBackground(new java.awt.Color(255, 204, 0));
        panelAnalytics.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Key Symptom & City Analysis", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Modern No. 20", 2, 16))); // NOI18N
        panelAnalytics.setForeground(new java.awt.Color(153, 153, 153));
        panelAnalytics.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnCheckAlert.setBackground(new java.awt.Color(255, 255, 102));
        btnCheckAlert.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        btnCheckAlert.setForeground(new java.awt.Color(0, 0, 204));
        btnCheckAlert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FeedbackAnalytics/Picture/alert.png"))); // NOI18N
        btnCheckAlert.setText("Check Alert");
        btnCheckAlert.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCheckAlert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckAlertActionPerformed(evt);
            }
        });
        panelAnalytics.add(btnCheckAlert, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 120, 210, 60));

        jLabel6.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 102));
        jLabel6.setText("Disease Prediction & Alert");
        panelAnalytics.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 490, 50));

        tblFeedback.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblFeedback.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Customer", "Feedback"
            }
        ));
        tblFeedback.setAlignmentX(0.8F);
        tblFeedback.setAlignmentY(0.8F);
        jScrollPane3.setViewportView(tblFeedback);

        panelAnalytics.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, 210));

        btnReport.setBackground(new java.awt.Color(255, 255, 0));
        btnReport.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        btnReport.setForeground(new java.awt.Color(0, 0, 255));
        btnReport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FeedbackAnalytics/Picture/Analysis.png"))); // NOI18N
        btnReport.setText("Data Report");
        btnReport.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });
        panelAnalytics.add(btnReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 370, 210, 70));

        tblResult.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblResult.setForeground(new java.awt.Color(255, 51, 51));
        tblResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Result of Analytics", "Special Attention"
            }
        ));
        jScrollPane2.setViewportView(tblResult);

        panelAnalytics.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, -1, 290));

        panelReport.setBackground(new java.awt.Color(204, 204, 204));
        panelReport.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        panelReport.setLayout(new java.awt.BorderLayout());
        panelAnalytics.add(panelReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 720, 690, 340));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("Step 1: Feedback Data Collection");
        panelAnalytics.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 360, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 0, 0));
        jLabel11.setText("Step 2: Semantics Analysis");
        panelAnalytics.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 340, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("Step 3: Data Visualization");
        panelAnalytics.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 680, 290, -1));

        btnResponse.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnResponse.setForeground(new java.awt.Color(51, 51, 255));
        btnResponse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FeedbackAnalytics/Picture/Response.png"))); // NOI18N
        btnResponse.setText("Response");
        btnResponse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResponseActionPerformed(evt);
            }
        });
        panelAnalytics.add(btnResponse, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 1000, 210, 60));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 930, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelAnalytics, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1132, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(35, Short.MAX_VALUE)
                    .addComponent(panelAnalytics, javax.swing.GroupLayout.PREFERRED_SIZE, 1081, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCheckAlertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckAlertActionPerformed
        stringList = new ArrayList<>();
        wp = new WordProcessor();
        double frequency = 0.0;

        String feedback = null;

        try {
            rs = dbOperator.getFeedback(conn);
            while (rs.next()) {
                feedback = rs.getString("content").replaceAll("[\\pP\\p{Punct}]", ""); //Filter the Punctuation.
                feedback = wp.cleanSentence(feedback);

                stringList = wp.splitString(feedback);

                for (String s : stringList) {
                    frequency = wp.getFrequency(s, rs, conn);

                    if (frequency > 0.0) {
                        //JOptionPane.showMessageDialog(null, "Disease Alert!");
                        Word word = wp.generateWord(s, frequency);
                        word.setWord(s);
                        word.setFrequency(frequency);
                    }
                }
            }

            //populate results table.
            populateResultTable(wp);

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnCheckAlertActionPerformed

    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        DefaultCategoryDataset ds = new DefaultCategoryDataset();
        /*
        for (String s : stringList) {
            double frequency = wp.getFrequency(s, rs, conn);
            ds.setValue(frequency, "", s);
        }*/
        for (Word w : wp.getArraylistWord()) {
            String feedbackID = dbOperator.getFeedbackID(conn, w);
            String strCity = dbOperator.getCity(conn, feedbackID);
            double frequency = wp.getFrequency(w.getWord(), rs, conn);
            ds.setValue(frequency, "", w.getWord() + " " + strCity);
        }

        JFreeChart chart = ChartFactory.createBarChart3D("Key Symptom", "", "", ds, PlotOrientation.HORIZONTAL, false, false, false);
        CategoryPlot catPlot = chart.getCategoryPlot();
        catPlot.setRangeGridlinePaint(Color.BLUE);

        ChartPanel chartPanel = new ChartPanel(chart);
        panelReport.removeAll();
        panelReport.add(chartPanel, BorderLayout.CENTER);
        panelReport.validate();
    }//GEN-LAST:event_btnReportActionPerformed

    private void btnResponseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResponseActionPerformed
        Email panelEmail = new Email();
        userProcessContainer.add("panelEmail ", panelEmail);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnResponseActionPerformed

    public void populateResultTable(WordProcessor wp) {
        DefaultTableModel model = (DefaultTableModel) tblResult.getModel();
        model.setRowCount(0);
        for (Word w : wp.getArraylistWord()) {
            String feedbackID = dbOperator.getFeedbackID(conn, w);
            String strCity = dbOperator.getCity(conn, feedbackID);
            Object[] row = new Object[2];
            row[0] = w;
            row[1] = strCity;
            model.addRow(row);
        }
    }

    public void populateFeedback() {
        stringList = new ArrayList<>();
        wp = new WordProcessor();
        double frequency = 0.0;

        String feedback = null;

        DefaultTableModel model = new DefaultTableModel(new String[]{"Customer", "Content"}, 0);
        ResultSet rs = dbOperator.getFeedbacks(conn);
        try {
            while (rs.next()) {
                String id = rs.getString("CustomerName");
                String e = rs.getString("content");
                model.addRow(new Object[]{id, e});
            }
            tblFeedback.setModel(model);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheckAlert;
    private javax.swing.JButton btnReport;
    private javax.swing.JButton btnResponse;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel panelAnalytics;
    private java.awt.Panel panelReport;
    private javax.swing.JTable tblFeedback;
    private javax.swing.JTable tblResult;
    // End of variables declaration//GEN-END:variables
}
